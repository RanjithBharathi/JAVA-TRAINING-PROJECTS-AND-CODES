class TreeNode {
	int value;
	TreeNode left;
	TreeNode right;

	TreeNode(int value) {
		this.value=value;
		this.left=null;
		this.right=null;
	}
}

class BinaryTree {
	TreeNode root;
	public void inorder(TreeNode root) {
		if(root==null) {
			return;
		}
		inorder(root.left);
		System.out.print(root.value+" ");
		inorder(root.right);
	}

	public void preorder(TreeNode root) {
		if(root==null) {
			return;
		}
		System.out.print(root.value+" ");
		preorder(root.left);
		preorder(root.right);
	}
	public void postorder(TreeNode root) {
		if(root==null) {
			return;
		}

		preorder(root.left);
		preorder(root.right);
		System.out.print(root.value+" ");
	}
}

public class Main {
	public static void main(String[] args) {
		BinaryTree t=new BinaryTree();
		t.root=new TreeNode(1);
		t.root.left=new TreeNode(2);
		t.root.right=new TreeNode(3);

		System.out.println("Inorder Traversal");
		t.inorder(t.root);
		System.out.println();

		System.out.println("Preorder Traversal");
		t.preorder(t.root);
		System.out.println();

		System.out.println("Postorder Traversal");
		t.postorder(t.root);
		System.out.println();


	}

}
